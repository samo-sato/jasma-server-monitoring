import { NavLink } from 'react-router-dom';
import CopyButton from '../../CopyButton.jsx';
import { generateHelp, generateSnoozeUrl } from '../../../functions.jsx';
import { toInt, msToWords, validateEnv } from '../../../utils.js';

// Import environment variables
const REACT_APP_REPEAT_DELAY = validateEnv(process.env.REACT_APP_REPEAT_DELAY, true);

function List(props: any) {

  // Returns information about last state of given watchdog
  function generateLastKnownStatus(watchdog: any) {
    if (watchdog.last_log_at) { // If last log available
      const msAgo = Date.now() - watchdog.last_log_at;

      let lastState = watchdog.last_status ? 'ON-LINE' : 'OFF-LINE'; // Status description of last log for user
      return `${lastState} ${msToWords(msAgo)} ago`; // Final string to be shown to user
    } else {
      if (watchdog.enabled) {
        return `No logs yet, please wait up to ${msToWords(toInt(REACT_APP_REPEAT_DELAY))}`;
      } else {
        return 'Watchdog is disabled';
      }
    }
  }

  // Get appropriate css class name based on Watchdog last connectivity status and enabled / disabled status
  function getClassName(lastStatus: number, lastLogAt: number, enabled: boolean) {
    if (enabled && lastLogAt) {
      return lastStatus === 1 ? 'good' : 'bad';
    } else {
      return '';
    }
  }

  // Teble body to render
  const tableBody = props.watchdogs.map((watchdog: any) => {
    const url = watchdog.url || generateSnoozeUrl(watchdog.id);
    return (
      <tr key={watchdog.id}>
        <td>{watchdog.name}</td>
        <td className={getClassName(watchdog.last_status, watchdog.last_log_at, watchdog.enabled)}>{generateLastKnownStatus(watchdog)}</td>
        <td>
          <CopyButton label="Copy url" valueToCopy={url} />
        </td>
        <td>{watchdog.passive ? 'Passive' : 'Active'}</td>
        <td>{watchdog.enabled ? 'Yes' : 'No'}</td>
        <td>
          <NavLink to={String(watchdog.id)} >Edit</NavLink>
        </td>
      </tr>
    )
  })

  return (
    <div>
      <table border={0}>
        <thead>
          <tr>
            <th>Name</th>
            <th>Last known service status</th>
            <th>Endpoint{generateHelp('Active mode:\nThis URL is provided by the user. It is URL that will be monitored by Watchdog at specified intervals. It represents the endpoint that Watchdog will request to check the service\'s status.\n\nPassive mode:\nThis URL is generated by the app. This URL must be requested by external service at specified time intervals to consider the service as "online" by the Watchdog.')}</th>
            <th>Operating mode</th>
            <th>Is enabled?</th>
            <th>Edit</th>
          </tr>
        </thead>
        <tbody>
          {tableBody}
        </tbody>
        <tfoot>
          <tr>
            <td colSpan={7}>End of the list</td>
          </tr>
        </tfoot>
      </table>
    </div>
  )
}

export default List;